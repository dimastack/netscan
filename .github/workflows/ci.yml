name: Netscan CI Pipeline

on:
  push:
    branches:
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Node.js (for frontend build if needed later)
        uses: actions/setup-node@v4
        with:
          node-version: '23.11.0'

      - name: Install Python dependencies and Playwright
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          python -m playwright install --with-deps

      - name: Create .env file from GitHub Secrets
        run: |
          cat <<EOF > .env
          FLASK_ENV=production
          FLASK_DEBUG=0
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          DB_USER=${{ secrets.DB_USER }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_HOST=db
          DB_PORT=${{ secrets.DB_PORT }}
          EOF

      - name: Start Docker Compose
        run: docker-compose up -d --build

      - name: Wait for backend to be ready
        run: |
          for i in {1..30}; do
            status=$(curl -s http://localhost:5001/api/v1/ | jq -r '.status') || true
            if [ "$status" = "ok" ]; then
              echo "Backend is ready"
              break
            fi
            echo "Waiting for backend..." && sleep 3
          done

      - name: Run Alembic migrations
        run: docker exec backend alembic upgrade head

      - name: Run API tests
        run: docker exec backend pytest tests/unit --maxfail=5 --disable-warnings

      - name: Run UI tests (Playwright)
        run: |
          pytest -m ui --headless
